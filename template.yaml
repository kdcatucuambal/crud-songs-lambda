AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  crud-node-songs-serverless

  Sample SAM Template for crud-node-songs-serverless
  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    CodeUri: app
    Timeout: 10
    Tracing: Active
    Runtime: nodejs16.x
    Architectures:
      - x86_64
    Environment:
      Variables:
        AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
        NODE_ENV: production
        TABLE_NAME: !Ref SongsTable
    
  Api:
    TracingEnabled: True

Resources:
  HelloWorldFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Handler: src/app.lambdaHandler
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /hello
            Method: get
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        #Sourcemap: true # Enabling source maps will create the required NODE_OPTIONS environment variables on your lambda function during sam build
        EntryPoints: 
        - src/app.ts
  CreateSongFunction:
    Type: AWS::Serverless::Function # More info about Function Resource:
    Properties:
      Handler: src/create.createSongHandler
      FunctionName: create-song
      Events:
        CreateSong:
          Type: Api # More info about API Event Source:
          Properties:
            Path: /songs
            Method: post 
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref SongsTable  
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        #Sourcemap: true # Enabling source maps will create the required NODE_OPTIONS environment variables on your lambda function during sam build
        EntryPoints: 
        - src/create.ts
  GetAllSongsFunction:
    Type: AWS::Serverless::Function # More info about Function Resource:
    Properties:
      Handler: src/getAll.getAllSongsHandler
      FunctionName: get-all-songs
      Events:
        GetAllSongs:
          Type: Api # More info about API Event Source:
          Properties:
            Path: /songs
            Method: get 
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref SongsTable  
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        #Sourcemap: true # Enabling source maps will create the required NODE_OPTIONS environment variables on your lambda function during sam build
        EntryPoints: 
        - src/getAll.ts
  GetSongByIdFunction:
    Type: AWS::Serverless::Function # More info about Function Resource:
    Properties:
      Handler: src/getById.getSongByIdHandler
      FunctionName: get-song-by-id
      Events:
        GetSongById:
          Type: Api # More info about API Event Source:
          Properties:
            Path: /songs/{id}
            Method: get 
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref SongsTable
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        #Sourcemap: true # Enabling source maps will create the required NODE_OPTIONS environment variables on your lambda function during sam build
        EntryPoints: 
        - src/getById.ts
  SongsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${AWS::StackName}-songs
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      
      

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  HelloWorldApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  HelloWorldFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt HelloWorldFunction.Arn
  HelloWorldFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt HelloWorldFunctionRole.Arn
  DynamoDBTable:
    Description: "DynamoDB table name"
    Value: !Ref SongsTable
